FirFT = 0 BirchFT = 0 CherryFT = 0 WalnutFT = 0 GenericFT = 0 OakFT = 0 PineFT = 0 PalmFT = 0 KoaFT = 0 VolcanoFT = 437 SnowGlowFT = 0 GoldSwampyFT = 0 GreenSwampyFT = 0 FrostFT = 0 CaveCrawlerFT = 0 LoneCaveFT = 98 SpookyFT = 0 SpookyNeonFT = 16 
            function Build()
        
    local PlayerName = WoodBase
    
    
    local Tag
    for i,v in pairs(Workspace.Properties:GetChildren()) do
    if v.Owner.Value == game.Players.LocalPlayer then
    Tag = v.OriginSquare.CFrame
    end
    end
    
    
        function fillbp(A_2)
            wait(.3)
                        
            for log,l in pairs(game.Workspace.PlayerModels:GetChildren()) do
            if string.find(l.Name, "Plank") then
            if l:FindFirstChild("Owner") and l.Owner.Value == game.Players[PlayerName] then
            if l:FindFirstChild("TreeClass") and l.TreeClass.Value == "Frost" then
                
            for i = 1,5 do
            game:GetService("ReplicatedStorage").Interaction.ClientIsDragging:FireServer(l)
            l.WoodSection.CFrame = A_2 + Vector3.new(0,1,0)
            end
                            
            task.wait(3)
            if game.Workspace:FindFirstChild('Dazed') then
            pcall(function()
            game.Workspace.Dazed:Destroy()
            end)
            end
            break
            end
            end
            end
            end
            end
    
    
    local Vec = Vector3.new
    local Ang = CFrame.Angles
    local Plr = game.Players.LocalPlayer

    function SetBp(Value)
    TreeB = Value
    end
    
    function Sbp(A_1, A_2, A_3)
    game.ReplicatedStorage.PlaceStructure.ClientPlacedBlueprint:FireServer(A_1, A_2, A_3)
    local Part = Instance.new('Part',workspace)
    Part.Name = "Dazed"
    Part.Size = Vector3.new(5,0,5)
    Part.Anchored = true
    Part.Transparency = 1
    Part.CFrame = A_2
    local Da = workspace.Dazed
    Da.Orientation = Vector3.new(0, 0, 0)
    wait(.6)
    fillbp(A_2)
    if (math.random(1,20) == 1) then
    game:GetService("RunService").RenderStepped:wait()
    end
    end
    
    wait(2.560714285714286)SetBp("Volcano")Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.4609134197235107) + Vec(9.199981689453125, 41.400001525878906, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -1.9373260736465454) + Vec(-7.5, 43.70000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -2.7750933170318604) + Vec(9.29998779296875, 42.60000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -2.3562333583831787) + Vec(10.79998779296875, 44.60000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.722724199295044) + Vec(5.5, 38.10000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 1.675531029701233) + Vec(5.5, 41.10000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -2.932137966156006) + Vec(5.79998779296875, 37.900001525878906, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -0.05231710895895958) + Vec(-2.5, 33.900001525878906, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -2.3562333583831787) + Vec(11, 40.29999923706055, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -3.1415927410125732) + Vec(2.699981689453125, 43.10000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -1.2565909624099731) + Vec(-5.800018310546875, 41.70000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -3.089275598526001) + Vec(4.600006103515625, 33.10000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(3.1415927410125732, 0, 1.5184924602508545) + Vec(-0, 32.70000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.670328140258789) + Vec(4.600006103515625, 43.60000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.565667152404785) + Vec(7, 45.20000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.1990697383880615) + Vec(10.899993896484375, 46.400001525878906, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.5132410526275635) + Vec(6.199981689453125, 44.70000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -1.0472443103790283) + Vec(-5.5, 46.10000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -2.094348192214966) + Vec(2.100006103515625, 43.5, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -1.675531029701233) + Vec(-0.70001220703125, 43.400001525878906, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -3.089275598526001) + Vec(9.5, 44.5, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.879807949066162) + Vec(8.5, 46, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -3.0368361473083496) + Vec(1.29998779296875, 43.60000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.617957592010498) + Vec(8.699981689453125, 47.900001525878906, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -0.3141208589076996) + Vec(-8.20001220703125, 48, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -1.9373260736465454) + Vec(-9.399993896484375, 45, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -0.8901621103286743) + Vec(-4.70001220703125, 45.60000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.8274717330932617) + Vec(3.699981689453125, 43.20000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -3.1415927410125732) + Vec(1.199981689453125, 43.70000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -2.565667152404785) + Vec(4.399993896484375, 39.10000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -3.1415927410125732) + Vec(1, 43.70000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.0420150756835938) + Vec(0.100006103515625, 43.5, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -2.9844977855682373) + Vec(0.899993896484375, 42.79999923706055, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -1.0472443103790283) + Vec(-3.100006103515625, 44.5, -68.5), Plr)
    
    Sbp('Wedge10_Thin',Tag*Ang(-3.1415927410125732, 0, -2.094348192214966) + Vec(-1.899993896484375, 57.79999923706055, -68.5), Plr)
    
    Sbp('Wedge10_Thin',Tag*Ang(3.1415927410125732, 0, 0.6283518075942993) + Vec(1.600006103515625, 61.900001525878906, -68.5), Plr)
    
    Sbp('Wedge10_Thin',Tag*Ang(3.1415927410125732, 0, 0.7330337762832642) + Vec(4.600006103515625, 54.60000228881836, -68.5), Plr)
    
    Sbp('Wedge10_Thin',Tag*Ang(-3.1415927410125732, 0, -2.617957592010498) + Vec(-4, 55.70000076293945, -68.5), Plr)
    
    Sbp('Wedge10_Thin',Tag*Ang(-3.1415927410125732, 0, -0.8901621103286743) + Vec(8.399993896484375, 43.10000228881836, -68.5), Plr)
    
    Sbp('Wedge10_Thin',Tag*Ang(-0, 0, 1.5184924602508545) + Vec(-3.300018310546875, 38.5, -68.5), Plr)
    
    Sbp('Wedge10_Thin',Tag*Ang(3.1415927410125732, 0, 0.3664993643760681) + Vec(9.100006103515625, 43.10000228881836, -68.5), Plr)
    
    Sbp('Wedge10_Thin',Tag*Ang(0, 0, 1.5707963705062866) + Vec(-2, 30.899999618530273, -68.5), Plr)
    
    Sbp('Wedge10_Thin',Tag*Ang(3.1415927410125732, 0, 1.0472443103790283) + Vec(-1.899993896484375, 57.900001525878906, -68.5), Plr)
    
    Sbp('Wedge10_Thin',Tag*Ang(3.1415927410125732, 0, 0.8901621103286743) + Vec(4.899993896484375, 54.60000228881836, -68.5), Plr)
    
    Sbp('Wedge10_Thin',Tag*Ang(3.1415927410125732, 0, 0.3664993643760681) + Vec(9.399993896484375, 42.79999923706055, -68.5), Plr)
    
    Sbp('Wedge10_Thin',Tag*Ang(0, 0, -1.2565909624099731) + Vec(-7.300018310546875, 42.29999923706055, -68.5), Plr)
    
    Sbp('Wedge10_Thin',Tag*Ang(-3.1415927410125732, 0, 1.7802095413208008) + Vec(6.399993896484375, 38.79999923706055, -68.5), Plr)
    
    Sbp('Wedge10_Thin',Tag*Ang(-3.1415927410125732, 0, -1.727887749671936) + Vec(5.79998779296875, 38.60000228881836, -68.5), Plr)
    
    Sbp('Wedge10_Thin',Tag*Ang(-3.1415927410125732, 0, -1.5707963705062866) + Vec(4.199981689453125, 31.100000381469727, -68.5), Plr)
    
    Sbp('Wedge10_Thin',Tag*Ang(-0, 0, 1.6231002807617188) + Vec(0.100006103515625, 31.700000762939453, -68.5), Plr)
    
    Sbp('Wedge10_Thin',Tag*Ang(0, 0, -1.3613831996917725) + Vec(-4, 38.60000228881836, -68.5), Plr)
    
    Sbp('Wedge10_Thin',Tag*Ang(-0, 0, 1.7802095413208008) + Vec(-4.20001220703125, 38.60000228881836, -68.5), Plr)
    
    Sbp('Wedge10_Thin',Tag*Ang(-0, 0, -1.6231002807617188) + Vec(-6.5, 43.20000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -1.9373260736465454) + Vec(1.29998779296875, 42.10000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -0) + Vec(-5.100006103515625, 20.399999618530273, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -3.1415927410125732) + Vec(-5.100006103515625, 22.200000762939453, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.617957592010498) + Vec(-5.600006103515625, 17, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -1.5707963705062866) + Vec(-6.899993896484375, 21.30000114440918, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -0) + Vec(-5.100006103515625, 20, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -2.094348192214966) + Vec(-6.20001220703125, 21.30000114440918, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -3.1415927410125732) + Vec(-5.100006103515625, 23.200000762939453, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -0.05231710895895958) + Vec(1.5, 59.60000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -1.5707963705062866) + Vec(-6.899993896484375, 21.30000114440918, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.094348192214966) + Vec(-5, 17.700000762939453, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -3.1415927410125732) + Vec(-6.5, 16.80000114440918, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -3.1415927410125732) + Vec(-7.5, 20.600000381469727, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -3.1415927410125732) + Vec(-6.5, 24.600000381469727, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -2.617957592010498) + Vec(-6, 24.5, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.094348192214966) + Vec(11.600006103515625, 17.700000762939453, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -3.1415927410125732) + Vec(-3.100006103515625, 20.600000381469727, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -2.617957592010498) + Vec(10.600006103515625, 24.5, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -3.1415927410125732) + Vec(-2.100006103515625, 16.80000114440918, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -3.1415927410125732) + Vec(10.100006103515625, 24.600000381469727, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -0) + Vec(-5.100006103515625, 19, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -0) + Vec(11.5, 19, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(3.1415927410125732, 0, 0.5236350297927856) + Vec(7.29998779296875, 18.30000114440918, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -2.094348192214966) + Vec(-5.70001220703125, 24.100000381469727, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.617957592010498) + Vec(7.29998779296875, 23.899999618530273, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -3.1415927410125732) + Vec(11.5, 23.200000762939453, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -0.5236350297927856) + Vec(4.899993896484375, 18.30000114440918, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -3.1415927410125732) + Vec(10.100006103515625, 16.80000114440918, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -3.1415927410125732) + Vec(7.29998779296875, 23.200000762939453, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -3.1415927410125732) + Vec(4.899993896484375, 18.200000762939453, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -0) + Vec(11.5, 20, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -3.1415927410125732) + Vec(4.899993896484375, 23.200000762939453, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -2.617957592010498) + Vec(4.899993896484375, 23.899999618530273, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -2.094348192214966) + Vec(5.199981689453125, 24.600000381469727, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.617957592010498) + Vec(11, 17, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -2.094348192214966) + Vec(10.899993896484375, 24.100000381469727, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -0.5236350297927856) + Vec(0.29998779296875, 18.30000114440918, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -3.1415927410125732) + Vec(7.29998779296875, 18.200000762939453, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.094348192214966) + Vec(2.399993896484375, 24.600000381469727, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -1.0472443103790283) + Vec(5.199981689453125, 17.600000381469727, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.094348192214966) + Vec(7, 24.600000381469727, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -2.617957592010498) + Vec(0.29998779296875, 23.899999618530273, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(3.1415927410125732, 0, 1.0472443103790283) + Vec(2.399993896484375, 17.600000381469727, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -1.0472443103790283) + Vec(0.600006103515625, 17.600000381469727, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -3.1415927410125732) + Vec(-1.100006103515625, 16.80000114440918, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -3.1415927410125732) + Vec(2.699981689453125, 18.200000762939453, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -2.094348192214966) + Vec(0.600006103515625, 24.600000381469727, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -3.1415927410125732) + Vec(0.29998779296875, 18.200000762939453, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.617957592010498) + Vec(2.699981689453125, 23.899999618530273, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(3.1415927410125732, 0, 1.0472443103790283) + Vec(7, 17.600000381469727, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -3.1415927410125732) + Vec(0.29998779296875, 23.200000762939453, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(3.1415927410125732, 0, 0.5236350297927856) + Vec(2.699981689453125, 18.30000114440918, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -3.1415927410125732) + Vec(2.699981689453125, 23.200000762939453, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -0.5236350297927856) + Vec(1.199981689453125, 38.400001525878906, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -0.994806170463562) + Vec(-8.899993896484375, 41.10000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -1.4660618305206299) + Vec(-7.300018310546875, 41.70000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -2.1467864513397217) + Vec(-7.70001220703125, 42.900001525878906, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -0.9425228834152222) + Vec(-7.5, 41.20000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -2.5132410526275635) + Vec(-0.600006103515625, 41.20000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -0.05231710895895958) + Vec(-2.5, 32.900001525878906, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -0) + Vec(-2.899993896484375, 34.79999923706055, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -0.15709492564201355) + Vec(-3.399993896484375, 37.70000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.5132410526275635) + Vec(9.79998779296875, 40.60000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 3.089275598526001) + Vec(10.79998779296875, 40.5, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -1.4660618305206299) + Vec(6.399993896484375, 40.10000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -0.15709492564201355) + Vec(-3.20001220703125, 36.70000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -3.1415927410125732) + Vec(4.600006103515625, 31.5, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -1.2565909624099731) + Vec(-8.399993896484375, 39.60000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -0.994806170463562) + Vec(-9.100006103515625, 40.10000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(3.1415927410125732, 0, 1.4660618305206299) + Vec(9, 41.900001525878906, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -3.089275598526001) + Vec(5.399993896484375, 33, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(3.1415927410125732, 0, 0.7330337762832642) + Vec(9.100006103515625, 53.70000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.932137966156006) + Vec(9.29998779296875, 41.29999923706055, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(3.1415927410125732, 0, 0.15709492564201355) + Vec(2.899993896484375, 51.10000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -2.1467864513397217) + Vec(10.79998779296875, 39.79999923706055, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(3.1415927410125732, 0, 1.2565909624099731) + Vec(9, 53.400001525878906, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.617957592010498) + Vec(2.899993896484375, 54.60000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.5132410526275635) + Vec(11.399993896484375, 45.70000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.7750933170318604) + Vec(-1.600006103515625, 57, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -1.4137049913406372) + Vec(-4, 41.10000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(3.1415927410125732, 0, 1.2042666673660278) + Vec(8.100006103515625, 41.79999923706055, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -1.727887749671936) + Vec(-6.600006103515625, 41.60000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 1.832642674446106) + Vec(10.399993896484375, 40.5, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 1.832642674446106) + Vec(4.600006103515625, 40.60000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(3.1415927410125732, 0, 1.4137049913406372) + Vec(6.29998779296875, 41.20000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -1.675531029701233) + Vec(1.399993896484375, 37.60000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -3.1415927410125732) + Vec(9.100006103515625, 20.600000381469727, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -1.832642674446106) + Vec(-2.100006103515625, 40.60000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -1.5707963705062866) + Vec(-7.600006103515625, 39.400001525878906, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.565667152404785) + Vec(-0.600006103515625, 38.10000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(3.1415927410125732, 0, 1.2042666673660278) + Vec(7.199981689453125, 41.5, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -2.094348192214966) + Vec(-1.300018310546875, 40.79999923706055, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -0) + Vec(-8.5, 49.79999923706055, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -0.3664993643760681) + Vec(-1.800018310546875, 38.400001525878906, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(3.1415927410125732, 0, 0.47126463055610657) + Vec(1.199981689453125, 38.400001525878906, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 1.675531029701233) + Vec(0.79998779296875, 37.60000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.932137966156006) + Vec(3.5, 39.400001525878906, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.1467864513397217) + Vec(-0, 37.70000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -2.9844977855682373) + Vec(3.399993896484375, 38.60000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -1.675531029701233) + Vec(-3.100006103515625, 41, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -2.879807949066162) + Vec(-1.100006103515625, 39.5, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -2.617957592010498) + Vec(0.5, 41.900001525878906, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -2.0420150756835938) + Vec(-0.20001220703125, 41.900001525878906, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -2.5132410526275635) + Vec(-0.5, 41.20000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.0420150756835938) + Vec(3.699981689453125, 40.900001525878906, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.4085588455200195) + Vec(3, 41.20000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.5132410526275635) + Vec(2.899993896484375, 41.10000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -1.3089500665664673) + Vec(-1.399993896484375, 43.60000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(3.1415927410125732, 0, 1.3089500665664673) + Vec(5.29998779296875, 40.79999923706055, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 3.0368361473083496) + Vec(-1.100006103515625, 38.70000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.0420150756835938) + Vec(2.5, 41.79999923706055, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.617957592010498) + Vec(1.79998779296875, 42.10000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -2.094348192214966) + Vec(2.199981689453125, 37.60000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.8274717330932617) + Vec(1, 43.60000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.670328140258789) + Vec(3.29998779296875, 40.29999923706055, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.565667152404785) + Vec(5.399993896484375, 44.10000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -2.879807949066162) + Vec(1.899993896484375, 43.60000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -2.722724199295044) + Vec(-0.899993896484375, 40.400001525878906, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -1.09957754611969) + Vec(-2.300018310546875, 44, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -2.617957592010498) + Vec(0.5, 42.10000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.932137966156006) + Vec(0.199981689453125, 43.60000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -2.4609134197235107) + Vec(2.899993896484375, 38.10000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -0.994806170463562) + Vec(-3.899993896484375, 45, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.9844977855682373) + Vec(1.5, 42.70000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -2.7750933170318604) + Vec(-7.600006103515625, 44.60000228881836, -68.5), Plr)
    
    Sbp('Post',Tag*Ang(-3.1415927410125732, 0, -3.1415927410125732) + Vec(-7.5, 21.600000381469727, -68.5), Plr)
    
    Sbp('Post',Tag*Ang(-3.1415927410125732, 0, -3.1415927410125732) + Vec(2.699981689453125, 19.200000762939453, -68.5), Plr)
    
    Sbp('Post',Tag*Ang(-3.1415927410125732, 0, -3.1415927410125732) + Vec(7.29998779296875, 19.200000762939453, -68.5), Plr)
    
    Sbp('Post',Tag*Ang(-3.1415927410125732, 0, -3.1415927410125732) + Vec(4.899993896484375, 19.200000762939453, -68.5), Plr)
    
    Sbp('Post',Tag*Ang(-3.1415927410125732, 0, -3.1415927410125732) + Vec(0.29998779296875, 19.200000762939453, -68.5), Plr)
    
    Sbp('Post',Tag*Ang(-3.1415927410125732, 0, -3.1415927410125732) + Vec(9.100006103515625, 21.600000381469727, -68.5), Plr)
    
    Sbp('Post',Tag*Ang(-3.1415927410125732, 0, -3.1415927410125732) + Vec(9.100006103515625, 16.80000114440918, -68.5), Plr)
    
    Sbp('Post',Tag*Ang(-3.1415927410125732, 0, -3.1415927410125732) + Vec(-7.5, 16.80000114440918, -68.5), Plr)
    
    Sbp('Post',Tag*Ang(-3.1415927410125732, 0, -3.1415927410125732) + Vec(11.5, 19.200000762939453, -68.5), Plr)
    
    Sbp('Post',Tag*Ang(-3.1415927410125732, 0, -3.1415927410125732) + Vec(-3.100006103515625, 16.80000114440918, -68.5), Plr)
    
    Sbp('Post',Tag*Ang(-3.1415927410125732, 0, -3.1415927410125732) + Vec(-3.100006103515625, 21.600000381469727, -68.5), Plr)
    
    Sbp('Wedge9_Thin',Tag*Ang(3.1415927410125732, 0, 0.20945458114147186) + Vec(4.699981689453125, 41.60000228881836, -68.5), Plr)
    
    Sbp('Wedge9_Thin',Tag*Ang(3.1415927410125732, 0, 0.8901621103286743) + Vec(8.600006103515625, 53.900001525878906, -68.5), Plr)
    
    Sbp('Wedge9_Thin',Tag*Ang(-3.1415927410125732, 0, 2.4085588455200195) + Vec(-2.300018310546875, 41.20000076293945, -68.5), Plr)
    
    Sbp('Wedge9_Thin',Tag*Ang(3.1415927410125732, 0, 1.4660618305206299) + Vec(11, 42.5, -68.5), Plr)
    
    Sbp('Wedge9_Thin',Tag*Ang(-3.1415927410125732, 0, -1.832642674446106) + Vec(5.29998779296875, 32.20000076293945, -68.5), Plr)
    
    Sbp('Wedge9_Thin',Tag*Ang(-0, -0, -1.5707963705062866) + Vec(-8.70001220703125, 42.29999923706055, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(-0, 0, 2.1467864513397217) + Vec(-7.20001220703125, 42.70000076293945, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(-3.1415927410125732, 0, 1.832642674446106) + Vec(-4.300018310546875, 56.29999923706055, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(3.1415927410125732, 0, 1.1519404649734497) + Vec(-3.899993896484375, 56.79999923706055, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(-0, 0, 1.832642674446106) + Vec(-8, 41.70000076293945, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(-0, 0, 1.675531029701233) + Vec(-7.800018310546875, 40.70000076293945, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(3.1415927410125732, 0, 0.47126463055610657) + Vec(-9.20001220703125, 40.10000228881836, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(0, 0, -1.3089500665664673) + Vec(-3.399993896484375, 32.70000076293945, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(0, 0, -1.3089500665664673) + Vec(-3.300018310546875, 33.20000076293945, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(-0, 0, -1.7802095413208008) + Vec(-3.399993896484375, 33.70000076293945, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(-3.1415927410125732, 0, -1.2565909624099731) + Vec(5.699981689453125, 32.20000076293945, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(-0, 0, 2.1467864513397217) + Vec(-7.399993896484375, 42.60000228881836, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(3.1415927410125732, 0, 1.1519404649734497) + Vec(11.29998779296875, 41.29999923706055, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(-0, 0, 0.7853593230247498) + Vec(1.100006103515625, 38.5, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(-3.1415927410125732, 0, 2.1467864513397217) + Vec(10.699981689453125, 42.79999923706055, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(3.1415927410125732, 0, 1.09957754611969) + Vec(5.199981689453125, 54.10000228881836, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(3.1415927410125732, 0, 1.09957754611969) + Vec(1.29998779296875, 62, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(3.1415927410125732, 0, 1.2565909624099731) + Vec(8.29998779296875, 53.20000076293945, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(-3.1415927410125732, 0, -0.47126463055610657) + Vec(-9.20001220703125, 40.20000076293945, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(-3.1415927410125732, 0, 2.5132410526275635) + Vec(4.600006103515625, 31.200000762939453, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(0, 0, -1.3089500665664673) + Vec(-3.300018310546875, 32.5, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(3.1415927410125732, 0, 1.1519404649734497) + Vec(4.5, 53.5, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(-3.1415927410125732, 0, -1.3613831996917725) + Vec(-1.5, 58.10000228881836, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(3.1415927410125732, 0, 0.6283518075942993) + Vec(1.79998779296875, 62.10000228881836, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(3.1415927410125732, -0, 1.5707963705062866) + Vec(-3.70001220703125, 55.900001525878906, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(-3.1415927410125732, 0, 2.094348192214966) + Vec(4.699981689453125, 55.70000076293945, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(-3.1415927410125732, 0, 2.5132410526275635) + Vec(-1.800018310546875, 58.400001525878906, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(-3.1415927410125732, 0, 1.727887749671936) + Vec(10.399993896484375, 41.900001525878906, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(3.1415927410125732, 0, 0.15709492564201355) + Vec(11.600006103515625, 40.29999923706055, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(-3.1415927410125732, 0, 1.832642674446106) + Vec(-2.300018310546875, 57.70000076293945, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(-3.1415927410125732, 0, -0.47126463055610657) + Vec(11.600006103515625, 40.20000076293945, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(3.1415927410125732, -0, 1.5707963705062866) + Vec(4.29998779296875, 54.400001525878906, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(3.1415927410125732, 0, 0.6806792616844177) + Vec(11.5, 40.20000076293945, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(3.1415927410125732, 0, 1.5184924602508545) + Vec(8.100006103515625, 54.10000228881836, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(-3.1415927410125732, 0, -0.6806792616844177) + Vec(-9.100006103515625, 40.10000228881836, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(3.1415927410125732, 0, 1.3613831996917725) + Vec(5.899993896484375, 33.79999923706055, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(3.1415927410125732, 0, 0.47126463055610657) + Vec(11.5, 40.29999923706055, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(-3.1415927410125732, 0, -0.15709492564201355) + Vec(-9.20001220703125, 40.20000076293945, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(-0, 0, 0.7330337762832642) + Vec(-6.899993896484375, 42.400001525878906, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(-0, 0, 1.8850016593933105) + Vec(-7.300018310546875, 42.10000228881836, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(-0, 0, 1.4660618305206299) + Vec(-3.20001220703125, 32.5, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(-0, 0, -1.832642674446106) + Vec(-8.800018310546875, 41.400001525878906, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(-0, 0, -1.7802095413208008) + Vec(-3.20001220703125, 33.60000228881836, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(-0, 0, 0.15709492564201355) + Vec(-6.600006103515625, 42.20000076293945, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(-0, 0, 1.5184924602508545) + Vec(-3.100006103515625, 33.5, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(-3.1415927410125732, 0, 1.832642674446106) + Vec(5.899993896484375, 32.900001525878906, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(3.1415927410125732, -0, 1.5707963705062866) + Vec(1.399993896484375, 17.200000762939453, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(-0, -0, -1.5707963705062866) + Vec(-8.70001220703125, 42.400001525878906, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(-0, 0, 2.1990697383880615) + Vec(-8.399993896484375, 42.5, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(-0, 0, 0.3141208589076996) + Vec(-6.5, 42.70000076293945, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(-0, -0, -1.5707963705062866) + Vec(-3.300018310546875, 34.60000228881836, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(-0, 0, 2.3562333583831787) + Vec(1.29998779296875, 38.60000228881836, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(-0, 0, 0.47126463055610657) + Vec(1.100006103515625, 38.5, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(-3.1415927410125732, 0, -1.5707963705062866) + Vec(1.600006103515625, 25, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(0, 0, -0.3141208589076996) + Vec(-5.70001220703125, 42.10000228881836, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(-3.1415927410125732, 0, -1.5707963705062866) + Vec(1.600006103515625, 17.200000762939453, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(-0, 0, 2.094348192214966) + Vec(1.399993896484375, 38.60000228881836, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(3.1415927410125732, -0, 1.5707963705062866) + Vec(1.399993896484375, 25, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(-0, 0, 2.4085588455200195) + Vec(1.199981689453125, 38.400001525878906, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(-0, 0, 2.670328140258789) + Vec(1.199981689453125, 38.400001525878906, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(-3.1415927410125732, 0, -1.727887749671936) + Vec(1.699981689453125, 17.200000762939453, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(3.1415927410125732, 0, 1.4137049913406372) + Vec(1.29998779296875, 25, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(-0, 0, 0.9425228834152222) + Vec(1, 38.60000228881836, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(-3.1415927410125732, 0, 1.727887749671936) + Vec(1.29998779296875, 17.200000762939453, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(-3.1415927410125732, 0, -1.4137049913406372) + Vec(6.29998779296875, 25, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(-3.1415927410125732, 0, -1.5707963705062866) + Vec(6.199981689453125, 17.200000762939453, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(-3.1415927410125732, 0, -1.4137049913406372) + Vec(1.699981689453125, 25, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(3.1415927410125732, 0, 1.4137049913406372) + Vec(5.899993896484375, 25, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(3.1415927410125732, -0, 1.5707963705062866) + Vec(6, 17.200000762939453, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(3.1415927410125732, -0, 1.5707963705062866) + Vec(6, 25, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(-3.1415927410125732, 0, -1.727887749671936) + Vec(6.29998779296875, 17.200000762939453, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(-3.1415927410125732, 0, 1.727887749671936) + Vec(5.899993896484375, 17.200000762939453, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(-3.1415927410125732, 0, -1.5707963705062866) + Vec(6.199981689453125, 25, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -2.617957592010498) + Vec(-5.5, 21.600000381469727, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(3.1415927410125732, 0, 0.2617846429347992) + Vec(-8.300018310546875, 50.70000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -2.670328140258789) + Vec(-1.70001220703125, 51.20000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(3.1415927410125732, 0, 0.6806792616844177) + Vec(-7.300018310546875, 52.20000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(3.1415927410125732, 0, 0.2617846429347992) + Vec(-5.5, 53.10000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.8274717330932617) + Vec(-1.300018310546875, 54.60000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -1.0472443103790283) + Vec(-6.20001220703125, 21.30000114440918, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -0.8901621103286743) + Vec(-5.300018310546875, 50.900001525878906, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 3.0368361473083496) + Vec(-2, 56.400001525878906, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -3.1415927410125732) + Vec(-1.100006103515625, 52.79999923706055, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(3.1415927410125732, 0, 0.3664993643760681) + Vec(-4.100006103515625, 55.5, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(3.1415927410125732, 0, 0.8901621103286743) + Vec(-5.899993896484375, 53.400001525878906, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -0.5236350297927856) + Vec(-5.5, 21, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -2.3562333583831787) + Vec(-2.300018310546875, 50.60000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -1.5184924602508545) + Vec(-7.20001220703125, 46.400001525878906, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -0.5236350297927856) + Vec(-5.70001220703125, 51.60000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -0.2617846429347992) + Vec(-8.5, 48.900001525878906, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -1.6231002807617188) + Vec(-3.800018310546875, 50.10000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -2.932137966156006) + Vec(-1.300018310546875, 51.900001525878906, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -0.05231710895895958) + Vec(-5.70001220703125, 52.29999923706055, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -1.2565909624099731) + Vec(-4.600006103515625, 50.400001525878906, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -1.1519404649734497) + Vec(-9.300018310546875, 45.79999923706055, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -2.1467864513397217) + Vec(-7.100006103515625, 42.900001525878906, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -2.0420150756835938) + Vec(-3, 50.20000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(3.1415927410125732, 0, 0.8377858996391296) + Vec(-6.70001220703125, 52.79999923706055, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(3.1415927410125732, 0, 0.8377858996391296) + Vec(-5.20001220703125, 54, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(3.1415927410125732, 0, 0.5236350297927856) + Vec(-4.100006103515625, 55.5, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(3.1415927410125732, 0, 0.47126463055610657) + Vec(-7.899993896484375, 51.400001525878906, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -2.094348192214966) + Vec(-8.800018310546875, 45.79999923706055, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -1.7802095413208008) + Vec(-8.100006103515625, 46.20000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(3.1415927410125732, 0, 0.6806792616844177) + Vec(-4.600006103515625, 54.70000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -2.4609134197235107) + Vec(-8.899993896484375, 44.20000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.7750933170318604) + Vec(-1.70001220703125, 55.5, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -1.4660618305206299) + Vec(-4, 40, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(3.1415927410125732, 0, 0.6283518075942993) + Vec(-5, 53.79999923706055, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -1.6231002807617188) + Vec(-7.70001220703125, 44.70000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(3.1415927410125732, 0, 0.5759254693984985) + Vec(-4.5, 54.60000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -0.4188685119152069) + Vec(-8.399993896484375, 41.10000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -3.0368361473083496) + Vec(-8.300018310546875, 44.70000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -0.9425228834152222) + Vec(-8.100006103515625, 40.400001525878906, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -0.6806792616844177) + Vec(-2.5, 39.60000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -1.7802095413208008) + Vec(-4.800018310546875, 39.900001525878906, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -2.879807949066162) + Vec(-0.20001220703125, 43.20000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -1.832642674446106) + Vec(-5.800018310546875, 39.60000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -0.7853593230247498) + Vec(-9.20001220703125, 40.70000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -0.20945458114147186) + Vec(-1.899993896484375, 38.70000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -1.1519404649734497) + Vec(-3.20001220703125, 40, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -1.5707963705062866) + Vec(-3, 40.60000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -1.832642674446106) + Vec(-6.70001220703125, 39.400001525878906, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -0) + Vec(-2.5, 35.79999923706055, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(3.1415927410125732, 0, 0.3664993643760681) + Vec(-2.800018310546875, 38.79999923706055, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(3.1415927410125732, 0, 0.47126463055610657) + Vec(0.699981689453125, 34.20000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(3.1415927410125732, 0, 0.05231710895895958) + Vec(-2.5, 36.79999923706055, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -0.20945458114147186) + Vec(-2, 39, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.879807949066162) + Vec(-1.100006103515625, 53.70000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -0.05231710895895958) + Vec(-2.5, 34.900001525878906, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(3.1415927410125732, 0, 1.3613831996917725) + Vec(-0.20001220703125, 34.20000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(3.1415927410125732, 0, 0.47126463055610657) + Vec(-2, 38.400001525878906, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(3.1415927410125732, 0, 0.9425228834152222) + Vec(-0.899993896484375, 36, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -0.4188685119152069) + Vec(-0.100006103515625, 34.20000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(3.1415927410125732, 0, 1.5184924602508545) + Vec(1.399993896484375, 32.60000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(3.1415927410125732, 0, 1.2565909624099731) + Vec(-0.399993896484375, 35.10000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(3.1415927410125732, 0, 1.4660618305206299) + Vec(-0, 33.20000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -0.20945458114147186) + Vec(-3.600006103515625, 38.70000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.1467864513397217) + Vec(1.600006103515625, 31.100000381469727, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -2.303806781768799) + Vec(-8.20001220703125, 43.60000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(3.1415927410125732, 0, 1.3089500665664673) + Vec(1.199981689453125, 33.60000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.1467864513397217) + Vec(1.899993896484375, 30.80000114440918, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(3.1415927410125732, 0, 0.20945458114147186) + Vec(3, 34.79999923706055, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(3.1415927410125732, -0, 1.5707963705062866) + Vec(1.399993896484375, 31.600000381469727, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(3.1415927410125732, 0, 0.7330337762832642) + Vec(3, 32.400001525878906, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(3.1415927410125732, 0, 0.47126463055610657) + Vec(-1.600006103515625, 36.60000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(3.1415927410125732, 0, 0.05231710895895958) + Vec(2.79998779296875, 33.900001525878906, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(3.1415927410125732, 0, 0.7853593230247498) + Vec(2, 31.399999618530273, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(3.1415927410125732, 0, 0.6283518075942993) + Vec(3.79998779296875, 36.29999923706055, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -3.089275598526001) + Vec(4.699981689453125, 34.29999923706055, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(3.1415927410125732, 0, 0.7853593230247498) + Vec(2.699981689453125, 32.10000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -3.0368361473083496) + Vec(5.5, 36, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -3.089275598526001) + Vec(5.399993896484375, 35, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -2.9844977855682373) + Vec(5.600006103515625, 36.900001525878906, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -0.10475649684667587) + Vec(2.79998779296875, 32.900001525878906, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -3.1415927410125732) + Vec(5.399993896484375, 34, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -3.1415927410125732) + Vec(4.699981689453125, 35.29999923706055, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -1.3613831996917725) + Vec(-0.600006103515625, 33.60000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.303806781768799) + Vec(4.79998779296875, 35.900001525878906, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -3.089275598526001) + Vec(4.600006103515625, 33.29999923706055, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -0.15709492564201355) + Vec(-3.100006103515625, 35.79999923706055, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(3.1415927410125732, 0, 0.4188685119152069) + Vec(3.29998779296875, 35.60000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.670328140258789) + Vec(4.79998779296875, 37.70000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(3.1415927410125732, 0, 1.4137049913406372) + Vec(4.5, 36.29999923706055, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -1.6231002807617188) + Vec(5.5, 40, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -0) + Vec(-2.399993896484375, 32.29999923706055, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -1.3613831996917725) + Vec(7.29998779296875, 40, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -3.1415927410125732) + Vec(4.600006103515625, 32.5, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 1.6231002807617188) + Vec(0.5, 56.10000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -3.1415927410125732) + Vec(4.399993896484375, 38.400001525878906, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -1.9896520376205444) + Vec(10.5, 41, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -1.3089500665664673) + Vec(8.29998779296875, 39.70000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -0.10475649684667587) + Vec(1.600006103515625, 58.60000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -1.9896520376205444) + Vec(4.699981689453125, 39.70000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.303806781768799) + Vec(11.29998779296875, 40.20000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(3.1415927410125732, 0, 0.2617846429347992) + Vec(1.899993896484375, 61.400001525878906, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -1.2565909624099731) + Vec(-4.899993896484375, 41.400001525878906, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(3.1415927410125732, 0, 0.994806170463562) + Vec(2.79998779296875, 58.20000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 1.9373260736465454) + Vec(-0.300018310546875, 56.10000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -1.5184924602508545) + Vec(9.100006103515625, 39.5, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 1.6231002807617188) + Vec(2.699981689453125, 60.60000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.3562333583831787) + Vec(-1.100006103515625, 56.400001525878906, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(3.1415927410125732, 0, 1.1519404649734497) + Vec(1.199981689453125, 56.400001525878906, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 1.675531029701233) + Vec(2.600006103515625, 59.60000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(3.1415927410125732, 0, 1.5184924602508545) + Vec(2.600006103515625, 58.79999923706055, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(3.1415927410125732, 0, 0.6283518075942993) + Vec(1.600006103515625, 57, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(3.1415927410125732, 0, 0.6806792616844177) + Vec(3.199981689453125, 57.70000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(3.1415927410125732, 0, 0.10475649684667587) + Vec(1.600006103515625, 57.79999923706055, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.1990697383880615) + Vec(3.600006103515625, 55.29999923706055, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(3.1415927410125732, 0, 0.20945458114147186) + Vec(1.699981689453125, 60.400001525878906, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.932137966156006) + Vec(8.29998779296875, 48.60000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(3.1415927410125732, 0, 1.1519404649734497) + Vec(3.79998779296875, 57, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 1.675531029701233) + Vec(3.899993896484375, 56.10000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.1467864513397217) + Vec(1.79998779296875, 53.60000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.4609134197235107) + Vec(2.199981689453125, 54.10000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(3.1415927410125732, 0, 0.994806170463562) + Vec(2, 51.79999923706055, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(3.1415927410125732, 0, 0.5759254693984985) + Vec(2.399993896484375, 51.29999923706055, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -1.0472443103790283) + Vec(4.5, 51.900001525878906, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -1.5707963705062866) + Vec(6.399993896484375, 52, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(3.1415927410125732, 0, 1.3089500665664673) + Vec(1.699981689453125, 52.400001525878906, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -0.2617846429347992) + Vec(3.5, 51.20000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -1.4137049913406372) + Vec(4.699981689453125, 52.5, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.670328140258789) + Vec(7.79998779296875, 45.70000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -1.9896520376205444) + Vec(6.100006103515625, 49.400001525878906, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -0.6806792616844177) + Vec(4.100006103515625, 51.5, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -2.617957592010498) + Vec(6.699981689453125, 48.79999923706055, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -1.832642674446106) + Vec(4.699981689453125, 53.20000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.670328140258789) + Vec(9.29998779296875, 49.10000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 1.6231002807617188) + Vec(1.600006103515625, 53.10000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(3.1415927410125732, 0, 0.8377858996391296) + Vec(9.79998779296875, 53, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -2.2514307498931885) + Vec(4.79998779296875, 53.29999923706055, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -2.2514307498931885) + Vec(6.199981689453125, 52.400001525878906, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -2.7750933170318604) + Vec(5.79998779296875, 52.60000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 3.0368361473083496) + Vec(7.600006103515625, 48.60000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -1.3089500665664673) + Vec(6.29998779296875, 51.29999923706055, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -2.879807949066162) + Vec(10, 46, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.1467864513397217) + Vec(9.100006103515625, 49.70000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(3.1415927410125732, 0, 1.5184924602508545) + Vec(9.5, 51.5, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -1.8850016593933105) + Vec(10, 39.5, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(3.1415927410125732, 0, 1.5184924602508545) + Vec(10.899993896484375, 50.400001525878906, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(3.1415927410125732, 0, 1.2565909624099731) + Vec(9.29998779296875, 52.5, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 1.832642674446106) + Vec(10.699981689453125, 48.5, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.4609134197235107) + Vec(8.399993896484375, 49, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(3.1415927410125732, 0, 1.2565909624099731) + Vec(10.79998779296875, 51.400001525878906, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 1.832642674446106) + Vec(9.399993896484375, 50.60000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -1.3613831996917725) + Vec(6, 50.29999923706055, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(3.1415927410125732, 0, 1.0472443103790283) + Vec(10.399993896484375, 52.29999923706055, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -1.675531029701233) + Vec(10.199981689453125, 45.29999923706055, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -3.089275598526001) + Vec(11.29998779296875, 45, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 1.675531029701233) + Vec(10.899993896484375, 49.400001525878906, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.2514307498931885) + Vec(9.29998779296875, 47.400001525878906, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.094348192214966) + Vec(10.100006103515625, 46.900001525878906, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.1467864513397217) + Vec(9.899993896484375, 48.70000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 3.089275598526001) + Vec(9.29998779296875, 46.10000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -2.617957592010498) + Vec(8.79998779296875, 42.900001525878906, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -2.7750933170318604) + Vec(9.29998779296875, 43.70000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -2.5132410526275635) + Vec(9.5, 43.20000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -2.3562333583831787) + Vec(10.100006103515625, 43.900001525878906, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -2.565667152404785) + Vec(10.699981689453125, 45.70000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -0.3141208589076996) + Vec(-8, 47, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -1.9896520376205444) + Vec(9.399993896484375, 45, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -0.7330337762832642) + Vec(-8.800018310546875, 46.60000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -1.3089500665664673) + Vec(-6.300018310546875, 46.29999923706055, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(3.1415927410125732, 0, 0.9425228834152222) + Vec(2.399993896484375, 61.400001525878906, -68.5), Plr)
    
    wait(1.35)SetBp("LoneCave")Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -1.8850016593933105) + Vec(-4.100006103515625, 58.5, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.1467864513397217) + Vec(13.399993896484375, 55.70000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -2.670328140258789) + Vec(13.29998779296875, 35.70000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -2.4085588455200195) + Vec(11.100006103515625, 32.60000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -1.832642674446106) + Vec(2.5, 28.200000762939453, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -1.9373260736465454) + Vec(4.29998779296875, 28.80000114440918, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -3.0368361473083496) + Vec(15, 43.29999923706055, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -3.0368361473083496) + Vec(15.100006103515625, 44.29999923706055, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -3.0368361473083496) + Vec(14.79998779296875, 41.29999923706055, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -2.094348192214966) + Vec(8.79998779296875, 30.899999618530273, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -3.089275598526001) + Vec(15.5, 49.20000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -1.9896520376205444) + Vec(5.199981689453125, 29.200000762939453, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -3.1415927410125732) + Vec(15.5, 52.20000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -1.8850016593933105) + Vec(-5.100006103515625, 58.20000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -2.094348192214966) + Vec(7.899993896484375, 30.5, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -3.1415927410125732) + Vec(15.5, 51.20000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -3.1415927410125732) + Vec(15.5, 53.20000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -3.089275598526001) + Vec(15.399993896484375, 47.20000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -3.089275598526001) + Vec(15.29998779296875, 46.20000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -2.617957592010498) + Vec(12.899993896484375, 34.79999923706055, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -2.565667152404785) + Vec(12.29998779296875, 34, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -3.0368361473083496) + Vec(15.199981689453125, 45.20000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 1.9896520376205444) + Vec(10.79998779296875, 57.10000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 1.9373260736465454) + Vec(9, 57.79999923706055, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -2.4609134197235107) + Vec(11.699981689453125, 33.29999923706055, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.0420150756835938) + Vec(11.699981689453125, 56.60000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -2.9844977855682373) + Vec(14.5, 39.29999923706055, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -2.1467864513397217) + Vec(9.600006103515625, 31.399999618530273, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -3.0368361473083496) + Vec(14.699981689453125, 40.29999923706055, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -2.0420150756835938) + Vec(6.100006103515625, 29.600000381469727, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 1.8850016593933105) + Vec(7.100006103515625, 58.5, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 1.9373260736465454) + Vec(9.899993896484375, 57.5, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -2.2514307498931885) + Vec(10.399993896484375, 32, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 1.7802095413208008) + Vec(1.5, 28, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -2.0420150756835938) + Vec(7, 30, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -3.0368361473083496) + Vec(14.899993896484375, 42.29999923706055, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.094348192214966) + Vec(12.5, 56.20000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -2.879807949066162) + Vec(14.100006103515625, 37.5, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -2.932137966156006) + Vec(14.29998779296875, 38.400001525878906, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.1990697383880615) + Vec(14.199981689453125, 55.10000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 1.8850016593933105) + Vec(8.100006103515625, 58.20000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.2514307498931885) + Vec(14.899993896484375, 54.5, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.3562333583831787) + Vec(15.600006103515625, 53.79999923706055, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 1.8850016593933105) + Vec(-0.399993896484375, 28.5, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -3.1415927410125732) + Vec(15.5, 50.20000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -1.7802095413208008) + Vec(1.5, 28, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -1.8850016593933105) + Vec(3.399993896484375, 28.5, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.094348192214966) + Vec(-5.800018310546875, 30.899999618530273, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -3.089275598526001) + Vec(15.399993896484375, 48.20000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.4609134197235107) + Vec(-8.70001220703125, 33.29999923706055, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 1.9896520376205444) + Vec(-2.20001220703125, 29.200000762939453, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.7750933170318604) + Vec(-10.70001220703125, 36.5, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.0420150756835938) + Vec(-4, 30, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.1467864513397217) + Vec(-6.600006103515625, 31.399999618530273, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -2.7750933170318604) + Vec(13.699981689453125, 36.5, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.670328140258789) + Vec(-10.300018310546875, 35.70000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 1.9373260736465454) + Vec(-1.300018310546875, 28.80000114440918, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 3.0368361473083496) + Vec(-11.70001220703125, 40.29999923706055, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.0420150756835938) + Vec(-3.100006103515625, 29.600000381469727, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.932137966156006) + Vec(-11.300018310546875, 38.400001525878906, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.9844977855682373) + Vec(-11.5, 39.29999923706055, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.565667152404785) + Vec(-9.300018310546875, 34, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 3.0368361473083496) + Vec(-12.100006103515625, 44.29999923706055, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.094348192214966) + Vec(-4.899993896484375, 30.5, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 3.089275598526001) + Vec(-12.300018310546875, 46.20000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.2514307498931885) + Vec(-7.399993896484375, 32, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.4085588455200195) + Vec(-8.100006103515625, 32.60000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.617957592010498) + Vec(-9.899993896484375, 34.79999923706055, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -3.1415927410125732) + Vec(-12.5, 50.20000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 3.0368361473083496) + Vec(-11.899993896484375, 42.29999923706055, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 3.0368361473083496) + Vec(-11.800018310546875, 41.29999923706055, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 2.879807949066162) + Vec(-11.100006103515625, 37.5, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -3.1415927410125732) + Vec(-12.5, 52.20000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 3.089275598526001) + Vec(-12.399993896484375, 48.20000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 3.089275598526001) + Vec(-12.399993896484375, 47.20000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -2.0420150756835938) + Vec(-8.70001220703125, 56.60000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -1.9373260736465454) + Vec(-6.899993896484375, 57.5, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 3.089275598526001) + Vec(-12.5, 49.20000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -3.1415927410125732) + Vec(-12.5, 51.20000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -2.1467864513397217) + Vec(-10.399993896484375, 55.70000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -2.3562333583831787) + Vec(-12.600006103515625, 53.79999923706055, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -2.2514307498931885) + Vec(-11.899993896484375, 54.5, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 3.0368361473083496) + Vec(-12.20001220703125, 45.20000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -2.094348192214966) + Vec(-9.5, 56.20000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -1.9373260736465454) + Vec(-6, 57.79999923706055, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -1.9896520376205444) + Vec(-7.800018310546875, 57.10000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 3.0368361473083496) + Vec(-12, 43.29999923706055, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -3.1415927410125732) + Vec(-12.5, 53.20000076293945, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, -2.1990697383880615) + Vec(-11.20001220703125, 55.10000228881836, -68.5), Plr)
    
    Sbp('Floor1Tiny',Tag*Ang(-3.1415927410125732, 0, 1.832642674446106) + Vec(0.5, 28.200000762939453, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(-3.1415927410125732, 0, -1.8850016593933105) + Vec(-3.399993896484375, 58.70000076293945, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(-3.1415927410125732, 0, -1.7802095413208008) + Vec(-3.20001220703125, 58.79999923706055, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(-3.1415927410125732, 0, 1.6231002807617188) + Vec(6.100006103515625, 58.79999923706055, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(-3.1415927410125732, 0, 1.7802095413208008) + Vec(6.199981689453125, 58.79999923706055, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(3.1415927410125732, 0, 1.4660618305206299) + Vec(6, 58.79999923706055, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(-3.1415927410125732, 0, -1.6231002807617188) + Vec(-3.100006103515625, 58.79999923706055, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(-3.1415927410125732, 0, -1.4660618305206299) + Vec(-3, 58.79999923706055, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(-3.1415927410125732, 0, 1.8850016593933105) + Vec(6.399993896484375, 58.70000076293945, -68.5), Plr)
    
    wait(1.0571428571428572)SetBp("SpookyNeon")Sbp('Wedge10_Thin',Tag*Ang(-3.1415927410125732, 0, -2.617957592010498) + Vec(4.699981689453125, 54.70000076293945, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(3.1415927410125732, 0, 1.4137049913406372) + Vec(4.899993896484375, 55, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(3.1415927410125732, -0, 1.5707963705062866) + Vec(5, 31.899999618530273, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(-3.1415927410125732, 0, -2.0420150756835938) + Vec(-4.20001220703125, 57.29999923706055, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(-3.1415927410125732, 0, -1.0472443103790283) + Vec(-1.300018310546875, 58.5, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(-3.1415927410125732, 0, -1.4137049913406372) + Vec(4.899993896484375, 55.60000228881836, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(-3.1415927410125732, 0, -1.6231002807617188) + Vec(8.100006103515625, 54.400001525878906, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(-3.1415927410125732, 0, 2.5132410526275635) + Vec(-1.5, 58.60000228881836, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(3.1415927410125732, 0, 1.3089500665664673) + Vec(-4.300018310546875, 57.20000076293945, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(0, 0, -0.47126463055610657) + Vec(1.199981689453125, 38.400001525878906, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(-0, 0, 1.4660618305206299) + Vec(-7.100006103515625, 41.70000076293945, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(3.1415927410125732, 0, 0.5236350297927856) + Vec(0.899993896484375, 62.5, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(3.1415927410125732, 0, 1.3089500665664673) + Vec(5.399993896484375, 32.10000228881836, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(3.1415927410125732, 0, 0.8901621103286743) + Vec(8.399993896484375, 54.400001525878906, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(3.1415927410125732, 0, 0.3664993643760681) + Vec(0.899993896484375, 62.60000228881836, -68.5), Plr)
    
    Sbp('Floor2Tiny',Tag*Ang(-3.1415927410125732, 0, 2.094348192214966) + Vec(4.5, 55.29999923706055, -68.5), Plr)
    
    
            end
        -- Gui to Lua
-- Version: 3.2

-- Instances:

local DazedWoodBuild = Instance.new("ScreenGui")
local main = Instance.new("Frame")
local Frame = Instance.new("Frame")
local Close = Instance.new("TextButton")
local test = Instance.new("Frame")
local Pine = Instance.new("ImageLabel")
local Phantom = Instance.new("ImageLabel")
local Spook = Instance.new("ImageLabel")
local Sinister = Instance.new("ImageLabel")
local Cherry = Instance.new("ImageLabel")
local Zombie = Instance.new("ImageLabel")
local Walnut = Instance.new("ImageLabel")
local SnowGlow = Instance.new("ImageLabel")
local Oak = Instance.new("ImageLabel")
local Fir = Instance.new("ImageLabel")
local Frost = Instance.new("ImageLabel")
local Gold = Instance.new("ImageLabel")
local Koa = Instance.new("ImageLabel")
local Lava = Instance.new("ImageLabel")
local ZombieL = Instance.new("TextLabel")
local WalnutL = Instance.new("TextLabel")
local SnowGlowL = Instance.new("TextLabel")
local SpookL = Instance.new("TextLabel")
local SinisterL = Instance.new("TextLabel")
local PineL = Instance.new("TextLabel")
local EndL = Instance.new("TextLabel")
local CaveL = Instance.new("TextLabel")
local CherryL = Instance.new("TextLabel")
local OakL = Instance.new("TextLabel")
local FirL = Instance.new("TextLabel")
local FrostL = Instance.new("TextLabel")
local GoldL = Instance.new("TextLabel")
local KoaL = Instance.new("TextLabel")
local Palm = Instance.new("ImageLabel")
local Gen = Instance.new("ImageLabel")
local Cave = Instance.new("ImageLabel")
local Birch = Instance.new("ImageLabel")
local BirchL = Instance.new("TextLabel")
local LavaL = Instance.new("TextLabel")
local PalmL = Instance.new("TextLabel")
local GenericL = Instance.new("TextLabel")
local Start = Instance.new("TextButton")

--Properties:

DazedWoodBuild.Name = "DazedWoodBuild"
DazedWoodBuild.Parent = game.CoreGui
DazedWoodBuild.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

main.Name = "main"
main.Parent = DazedWoodBuild
main.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
main.Position = UDim2.new(0.306901604, 0, 0.0209876541, 0)
main.Size = UDim2.new(0, 570, 0, 779)

Frame.Parent = main
Frame.BackgroundColor3 = Color3.fromRGB(131, 0, 0)
Frame.BorderSizePixel = 0
Frame.Position = UDim2.new(-0.00122884358, 0, -0.00100308657, 0)
Frame.Size = UDim2.new(0, 572, 0, 43)

Close.Name = "Close"
Close.Parent = Frame
Close.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Close.BackgroundTransparency = 1.000
Close.Position = UDim2.new(0.921328664, 0, 0, 0)
Close.Size = UDim2.new(0, 43, 0, 43)
Close.Font = Enum.Font.SourceSans
Close.Text = "X"
Close.TextColor3 = Color3.fromRGB(0, 0, 0)
Close.TextSize = 39.000

test.Name = "test"
test.Parent = main
test.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
test.BackgroundTransparency = 1.000
test.Position = UDim2.new(0, 0, 0.0625, 0)
test.Size = UDim2.new(0, 571, 0, 630)

Pine.Name = "Pine"
Pine.Parent = test
Pine.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Pine.Position = UDim2.new(0.0350815766, 0, 0.649404705, 0)
Pine.Size = UDim2.new(0, 75, 0, 75)
Pine.Image = "http://www.roblox.com/asset/?id=13612112499"

Phantom.Name = "Phantom"
Phantom.Parent = test
Phantom.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Phantom.Position = UDim2.new(0.0350815728, 0, 0.781150818, 0)
Phantom.Size = UDim2.new(0, 75, 0, 75)
Phantom.Image = "http://www.roblox.com/asset/?id=13612113132"

Spook.Name = "Spook"
Spook.Parent = test
Spook.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Spook.Position = UDim2.new(0.0350815766, 0, 0.385912716, 0)
Spook.Size = UDim2.new(0, 75, 0, 75)
Spook.Image = "http://www.roblox.com/asset/?id=13612106782"

Sinister.Name = "Sinister"
Sinister.Parent = test
Sinister.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Sinister.Position = UDim2.new(0.0350815803, 0, 0.514484107, 0)
Sinister.Size = UDim2.new(0, 75, 0, 75)
Sinister.Image = "http://www.roblox.com/asset/?id=13612111603"

Cherry.Name = "Cherry"
Cherry.Parent = test
Cherry.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Cherry.Position = UDim2.new(0.831929207, 0, 0.781150758, 0)
Cherry.Size = UDim2.new(0, 75, 0, 75)
Cherry.Image = "http://www.roblox.com/asset/?id=13612126588"

Zombie.Name = "Zombie"
Zombie.Parent = test
Zombie.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Zombie.Position = UDim2.new(0.0350815803, 0, -0.0109127471, 0)
Zombie.Size = UDim2.new(0, 75, 0, 75)
Zombie.Image = "http://www.roblox.com/asset/?id=13612104843"

Walnut.Name = "Walnut"
Walnut.Parent = test
Walnut.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Walnut.Position = UDim2.new(0.0350815803, 0, 0.117658705, 0)
Walnut.Size = UDim2.new(0, 75, 0, 75)
Walnut.Image = "http://www.roblox.com/asset/?id=13612105819"

SnowGlow.Name = "SnowGlow"
SnowGlow.Parent = test
SnowGlow.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SnowGlow.Position = UDim2.new(0.0350815803, 0, 0.252579331, 0)
SnowGlow.Size = UDim2.new(0, 75, 0, 75)
SnowGlow.Image = "http://www.roblox.com/asset/?id=13612110685"

Oak.Name = "Oak"
Oak.Parent = test
Oak.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Oak.Position = UDim2.new(0.831929207, 0, 0.649404705, 0)
Oak.Size = UDim2.new(0, 75, 0, 75)
Oak.Image = "http://www.roblox.com/asset/?id=13612123108"

Fir.Name = "Fir"
Fir.Parent = test
Fir.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Fir.Position = UDim2.new(0.831929207, 0, 0.514484048, 0)
Fir.Size = UDim2.new(0, 75, 0, 75)
Fir.Image = "http://www.roblox.com/asset/?id=13612122238"

Frost.Name = "Frost"
Frost.Parent = test
Frost.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frost.Position = UDim2.new(0.831929207, 0, 0.385912657, 0)
Frost.Size = UDim2.new(0, 75, 0, 75)
Frost.Image = "http://www.roblox.com/asset/?id=13612119504"

Gold.Name = "Gold"
Gold.Parent = test
Gold.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Gold.Position = UDim2.new(0.831929207, 0, 0.252579331, 0)
Gold.Size = UDim2.new(0, 75, 0, 75)
Gold.Image = "http://www.roblox.com/asset/?id=13612118685"

Koa.Name = "Koa"
Koa.Parent = test
Koa.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Koa.Position = UDim2.new(0.831929207, 0, 0.11765869, 0)
Koa.Size = UDim2.new(0, 75, 0, 75)
Koa.Image = "http://www.roblox.com/asset/?id=13612118027"

Lava.Name = "Lava"
Lava.Parent = test
Lava.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Lava.Position = UDim2.new(0.831929207, 0, -0.0109127471, 0)
Lava.Size = UDim2.new(0, 75, 0, 75)
Lava.Image = "http://www.roblox.com/asset/?id=13612117216"

ZombieL.Name = "ZombieL"
ZombieL.Parent = test
ZombieL.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ZombieL.BackgroundTransparency = 1.000
ZombieL.Position = UDim2.new(0.189141855, 0, 0.00793650839, 0)
ZombieL.Size = UDim2.new(0, 111, 0, 50)
ZombieL.Font = Enum.Font.SourceSans
ZombieL.TextColor3 = Color3.fromRGB(149, 25, 9)
ZombieL.TextSize = 14.000
ZombieL.Text = "Zombie 0/"..GreenSwampyFT

WalnutL.Name = "WalnutL"
WalnutL.Parent = test
WalnutL.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
WalnutL.BackgroundTransparency = 1.000
WalnutL.Position = UDim2.new(0.189141855, 0, 0.136507943, 0)
WalnutL.Size = UDim2.new(0, 111, 0, 50)
WalnutL.Font = Enum.Font.SourceSans
WalnutL.TextColor3 = Color3.fromRGB(149, 25, 9)
WalnutL.TextSize = 14.000
WalnutL.Text = "Walnut 0/"..WalnutFT

SnowGlowL.Name = "SnowGlowL"
SnowGlowL.Parent = test
SnowGlowL.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SnowGlowL.BackgroundTransparency = 1.000
SnowGlowL.Position = UDim2.new(0.189141855, 0, 0.271428585, 0)
SnowGlowL.Size = UDim2.new(0, 111, 0, 50)
SnowGlowL.Font = Enum.Font.SourceSans
SnowGlowL.TextColor3 = Color3.fromRGB(149, 25, 9)
SnowGlowL.TextSize = 14.000
SnowGlowL.Text = "SnowGlow 0/"..SnowGlowFT

SpookL.Name = "SpookL"
SpookL.Parent = test
SpookL.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SpookL.BackgroundTransparency = 1.000
SpookL.Position = UDim2.new(0.189141855, 0, 0.40476191, 0)
SpookL.Size = UDim2.new(0, 111, 0, 50)
SpookL.Font = Enum.Font.SourceSans
SpookL.TextColor3 = Color3.fromRGB(149, 25, 9)
SpookL.TextSize = 14.000
SpookL.Text = "Spook 0/"..SpookyFT

SinisterL.Name = "SinisterL"
SinisterL.Parent = test
SinisterL.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SinisterL.BackgroundTransparency = 1.000
SinisterL.Position = UDim2.new(0.189141855, 0, 0.533333302, 0)
SinisterL.Size = UDim2.new(0, 111, 0, 50)
SinisterL.Font = Enum.Font.SourceSans
SinisterL.TextColor3 = Color3.fromRGB(149, 25, 9)
SinisterL.TextSize = 14.000
SinisterL.Text = "Sinister 0/"..SpookyNeonFT

PineL.Name = "PineL"
PineL.Parent = test
PineL.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
PineL.BackgroundTransparency = 1.000
PineL.Position = UDim2.new(0.189141855, 0, 0.668253958, 0)
PineL.Size = UDim2.new(0, 111, 0, 50)
PineL.Font = Enum.Font.SourceSans
PineL.TextColor3 = Color3.fromRGB(149, 25, 9)
PineL.TextSize = 14.000
PineL.Text = "Pine 0/"..PineFT

EndL.Name = "EndL"
EndL.Parent = test
EndL.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
EndL.BackgroundTransparency = 1.000
EndL.Position = UDim2.new(0.189141855, 0, 0.800000012, 0)
EndL.Size = UDim2.new(0, 111, 0, 50)
EndL.Font = Enum.Font.SourceSans
EndL.TextColor3 = Color3.fromRGB(149, 25, 9)
EndL.TextSize = 14.000
EndL.Text = "EndTimes 0/"..LoneCaveFT

CaveL.Name = "CaveL"
CaveL.Parent = test
CaveL.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
CaveL.BackgroundTransparency = 1.000
CaveL.Position = UDim2.new(0.618213654, 0, 0.928571463, 0)
CaveL.Size = UDim2.new(0, 111, 0, 50)
CaveL.Font = Enum.Font.SourceSans
CaveL.TextColor3 = Color3.fromRGB(149, 25, 9)
CaveL.TextSize = 14.000
CaveL.Text = "Cave 0/"..CaveCrawlerFT

CherryL.Name = "CherryL"
CherryL.Parent = test
CherryL.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
CherryL.BackgroundTransparency = 1.000
CherryL.Position = UDim2.new(0.618213654, 0, 0.800000012, 0)
CherryL.Size = UDim2.new(0, 111, 0, 50)
CherryL.Font = Enum.Font.SourceSans
CherryL.TextColor3 = Color3.fromRGB(149, 25, 9)
CherryL.TextSize = 14.000
CherryL.Text = "Cherry 0/"..CherryFT

OakL.Name = "OakL"
OakL.Parent = test
OakL.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
OakL.BackgroundTransparency = 1.000
OakL.Position = UDim2.new(0.618213654, 0, 0.668253958, 0)
OakL.Size = UDim2.new(0, 111, 0, 50)
OakL.Font = Enum.Font.SourceSans
OakL.TextColor3 = Color3.fromRGB(149, 25, 9)
OakL.TextSize = 14.000
OakL.Text = "Oak 0/"..OakFT

FirL.Name = "FirL"
FirL.Parent = test
FirL.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FirL.BackgroundTransparency = 1.000
FirL.Position = UDim2.new(0.618213654, 0, 0.533333361, 0)
FirL.Size = UDim2.new(0, 111, 0, 50)
FirL.Font = Enum.Font.SourceSans
FirL.TextColor3 = Color3.fromRGB(149, 25, 9)
FirL.TextSize = 14.000
FirL.Text = "Fir 0/"..FirFT

FrostL.Name = "FrostL"
FrostL.Parent = test
FrostL.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FrostL.BackgroundTransparency = 1.000
FrostL.Position = UDim2.new(0.618213654, 0, 0.40476191, 0)
FrostL.Size = UDim2.new(0, 111, 0, 50)
FrostL.Font = Enum.Font.SourceSans
FrostL.TextColor3 = Color3.fromRGB(149, 25, 9)
FrostL.TextSize = 14.000
FrostL.Text = "Frost 0/"..FrostFT

GoldL.Name = "GoldL"
GoldL.Parent = test
GoldL.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
GoldL.BackgroundTransparency = 1.000
GoldL.Position = UDim2.new(0.618213654, 0, 0.271428585, 0)
GoldL.Size = UDim2.new(0, 111, 0, 50)
GoldL.Font = Enum.Font.SourceSans
GoldL.TextColor3 = Color3.fromRGB(149, 25, 9)
GoldL.TextSize = 14.000
GoldL.Text = "Gold 0/"..GoldSwampyFT

KoaL.Name = "KoaL"
KoaL.Parent = test
KoaL.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
KoaL.BackgroundTransparency = 1.000
KoaL.Position = UDim2.new(0.618213654, 0, 0.136507943, 0)
KoaL.Size = UDim2.new(0, 111, 0, 50)
KoaL.Font = Enum.Font.SourceSans
KoaL.TextColor3 = Color3.fromRGB(149, 25, 9)
KoaL.TextSize = 14.000
KoaL.Text = "Koa 0/"..KoaFT

Palm.Name = "Palm"
Palm.Parent = test
Palm.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Palm.Position = UDim2.new(0.0350815728, 0, 0.909722269, 0)
Palm.Size = UDim2.new(0, 75, 0, 75)
Palm.Image = "http://www.roblox.com/asset/?id=13612115039"

Gen.Name = "Gen"
Gen.Parent = test
Gen.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Gen.Position = UDim2.new(0.0350815728, 0, 1.03988099, 0)
Gen.Size = UDim2.new(0, 75, 0, 75)
Gen.Image = "http://www.roblox.com/asset/?id=13612116149"

Cave.Name = "Cave"
Cave.Parent = test
Cave.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Cave.Position = UDim2.new(0.831929207, 0, 0.909722209, 0)
Cave.Size = UDim2.new(0, 75, 0, 75)
Cave.Image = "http://www.roblox.com/asset/?id=13612127171"

Birch.Name = "Birch"
Birch.Parent = test
Birch.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Birch.Position = UDim2.new(0.831929207, 0, 1.03988099, 0)
Birch.Size = UDim2.new(0, 75, 0, 75)
Birch.Image = "http://www.roblox.com/asset/?id=13612129258"

BirchL.Name = "BirchL"
BirchL.Parent = test
BirchL.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
BirchL.BackgroundTransparency = 1.000
BirchL.Position = UDim2.new(0.618213654, 0, 1.05873013, 0)
BirchL.Size = UDim2.new(0, 111, 0, 50)
BirchL.Font = Enum.Font.SourceSans
BirchL.TextColor3 = Color3.fromRGB(149, 25, 9)
BirchL.TextSize = 14.000
BirchL.Text = "Birch 0/"..BirchFT

LavaL.Name = "LavaL"
LavaL.Parent = test
LavaL.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
LavaL.BackgroundTransparency = 1.000
LavaL.Position = UDim2.new(0.618213654, 0, 0.00793650839, 0)
LavaL.Size = UDim2.new(0, 111, 0, 50)
LavaL.Font = Enum.Font.SourceSans
LavaL.TextColor3 = Color3.fromRGB(149, 25, 9)
LavaL.TextSize = 14.000
LavaL.Text = "Lava 0/"..VolcanoFT

PalmL.Name = "PalmL"
PalmL.Parent = test
PalmL.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
PalmL.BackgroundTransparency = 1.000
PalmL.Position = UDim2.new(0.189141855, 0, 0.928571463, 0)
PalmL.Size = UDim2.new(0, 111, 0, 50)
PalmL.Font = Enum.Font.SourceSans
PalmL.TextColor3 = Color3.fromRGB(149, 25, 9)
PalmL.TextSize = 14.000
PalmL.Text = "Palm 0/"..PalmFT

GenericL.Name = "GenericL"
GenericL.Parent = test
GenericL.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
GenericL.BackgroundTransparency = 1.000
GenericL.Position = UDim2.new(0.189141855, 0, 1.05873024, 0)
GenericL.Size = UDim2.new(0, 111, 0, 50)
GenericL.Font = Enum.Font.SourceSans
GenericL.TextColor3 = Color3.fromRGB(149, 25, 9)
GenericL.TextSize = 14.000
GenericL.Text = "Generic 0/"..GenericFT

Start.Name = "Start"
Start.Parent = test
Start.BackgroundColor3 = Color3.fromRGB(131, 0, 0)
Start.Position = UDim2.new(0.364912301, 0, 0.979055345, 0)
Start.Size = UDim2.new(0, 153, 0, 50)
Start.Font = Enum.Font.SourceSans
Start.Text = "Start"
Start.TextColor3 = Color3.fromRGB(0, 0, 0)
Start.TextSize = 26.000

-- Scripts:

local function ICNW_fake_script() -- Close.LocalScript 
	local script = Instance.new('LocalScript', Close)

	Close.MouseButton1Down:Connect(function()
		game.CoreGui.DazedWoodBuild:Destroy()
	end)
end
coroutine.wrap(ICNW_fake_script)()
local function OBJWKLL_fake_script() -- Start.LocalScript 
	local script = Instance.new('LocalScript', Start)

	Start.MouseButton1Down:Connect(function()
		Build()
	end)
end
coroutine.wrap(OBJWKLL_fake_script)()
local function XNLT_fake_script() -- DazedWoodBuild.LocalScript 
	local script = Instance.new('LocalScript', DazedWoodBuild)

	frame = script.Parent.main -- Take out {}s, and put name of frame
	frame.Draggable = true
	frame.Active = true
	frame.Selectable = true
end
coroutine.wrap(XNLT_fake_script)()

local DWB = game.CoreGui.DazedWoodBuild.main


Fir = 0
Birch = 0
Cherry = 0
Walnut = 0
Generic = 0
Oak = 0
Pine = 0
Palm = 0
Koa = 0
Volcano = 0
GreenSwampy = 0
GoldSwampy = 0
SnowGlow = 0
Frost = 0
CaveCrawler = 0
LoneCave = 0
Spooky = 0
SpookyNeon = 0
for _, model in next, workspace.PlayerModels:GetChildren() do
    if string.find(model.Name, "Plank") then
    local owner = model:FindFirstChild("Owner")
    if owner and owner.Value == game.Players.LocalPlayer then
    local TreeClass = model:FindFirstChild("TreeClass")
            if TreeClass.Value == "Fir" then
                Fir = Fir + 1
            DWB.test.FirL.Text = "Fir: "..Fir.."/"..FirFT
        end;
    end
    end
    end

for _, model in next, workspace.PlayerModels:GetChildren() do
		if string.find(model.Name, "Plank") then
		local owner = model:FindFirstChild("Owner")
		if owner and owner.Value == game.Players.LocalPlayer then
		local TreeClass = model:FindFirstChild("TreeClass")
				if TreeClass.Value == "Birch" then
					Birch = Birch + 1
				DWB.test.BirchL.Text = "Birch: "..Birch.."/"..BirchFT
			end;
		end
		end
		end
for _, model in next, workspace.PlayerModels:GetChildren() do
            if string.find(model.Name, "Plank") then
            local owner = model:FindFirstChild("Owner")
            if owner and owner.Value == game.Players.LocalPlayer then
            local TreeClass = model:FindFirstChild("TreeClass")
                    if TreeClass.Value == "Cherry" then
                        Cherry = Cherry + 1
                    DWB.test.CherryL.Text = "Cherry: "..Cherry.."/"..CherryFT
                end;
            end
            end
            end
for _, model in next, workspace.PlayerModels:GetChildren() do
                if string.find(model.Name, "Plank") then
                local owner = model:FindFirstChild("Owner")
                if owner and owner.Value == game.Players.LocalPlayer then
                local TreeClass = model:FindFirstChild("TreeClass")
                        if TreeClass.Value == "Walnut" then
                            Walnut = Walnut + 1
                        DWB.test.WalnutL.Text = "Walnut: "..Walnut.."/"..WalnutFT
                    end;
                end
                end
                end
for _, model in next, workspace.PlayerModels:GetChildren() do
                    if string.find(model.Name, "Plank") then
                    local owner = model:FindFirstChild("Owner")
                    if owner and owner.Value == game.Players.LocalPlayer then
                    local TreeClass = model:FindFirstChild("TreeClass")
                            if TreeClass.Value == "Generic" then
                                Generic = Generic + 1
                            DWB.test.GenericL.Text = "Generic: "..Generic.."/"..GenericFT
                        end;
                    end
                    end
                    end
for _, model in next, workspace.PlayerModels:GetChildren() do
                        if string.find(model.Name, "Plank") then
                        local owner = model:FindFirstChild("Owner")
                        if owner and owner.Value == game.Players.LocalPlayer then
                        local TreeClass = model:FindFirstChild("TreeClass")
                                if TreeClass.Value == "Oak" then
                                    Oak = Oak + 1
                                DWB.test.OakL.Text = "Oak: "..Oak.."/"..OakFT
                            end;
                        end
                        end
                        end
for _, model in next, workspace.PlayerModels:GetChildren() do
                            if string.find(model.Name, "Plank") then
                            local owner = model:FindFirstChild("Owner")
                            if owner and owner.Value == game.Players.LocalPlayer then
                            local TreeClass = model:FindFirstChild("TreeClass")
                                    if TreeClass.Value == "Pine" then
                                        Pine = Pine + 1
                                    DWB.test.PineL.Text = "Pine: "..Pine.."/"..PineFT
                                end;
                            end
                            end
                            end
for _, model in next, workspace.PlayerModels:GetChildren() do
		if string.find(model.Name, "Plank") then
		local owner = model:FindFirstChild("Owner")
		if owner and owner.Value == game.Players.LocalPlayer then
		local TreeClass = model:FindFirstChild("TreeClass")
				if TreeClass.Value == "Palm" then
					Palm = Palm + 1
				DWB.test.PalmL.Text = "Palm: "..Palm.."/"..PalmFT
			end;
		end
		end
		end
for _, model in next, workspace.PlayerModels:GetChildren() do
            if string.find(model.Name, "Plank") then
            local owner = model:FindFirstChild("Owner")
            if owner and owner.Value == game.Players.LocalPlayer then
            local TreeClass = model:FindFirstChild("TreeClass")
                    if TreeClass.Value == "Koa" then
                        Koa = Koa + 1
                    DWB.test.KoaL.Text = "Koa: "..Koa.."/"..KoaFT + 0 or KoaFT
                end;
            end
            end
            end


for _, model in next, workspace.PlayerModels:GetChildren() do
                if string.find(model.Name, "Plank") then
                local owner = model:FindFirstChild("Owner")
                if owner and owner.Value == game.Players.LocalPlayer then
                local TreeClass = model:FindFirstChild("TreeClass")
                        if TreeClass.Value == "Volcano" then
                            Volcano = Volcano + 1
                        DWB.test.VolcanoL.Text = "Volcano: "..Volcano.."/"..VolcanoFT
                    end;
                end
                end
                end

for _, model in next, workspace.PlayerModels:GetChildren() do
    if string.find(model.Name, "Plank") then
    local owner = model:FindFirstChild("Owner")
    if owner and owner.Value == game.Players.LocalPlayer then
    local TreeClass = model:FindFirstChild("TreeClass")
            if TreeClass.Value == "GreenSwampy" then
                GreenSwampy = GreenSwampy + 1
            DWB.test.ZombieL.Text = "GreenSwampy: "..GreenSwampy.."/"..GreenSwampyFT
        end;
    end
    end
    end

for _, model in next, workspace.PlayerModels:GetChildren() do
        if string.find(model.Name, "Plank") then
        local owner = model:FindFirstChild("Owner")
        if owner and owner.Value == game.Players.LocalPlayer then
        local TreeClass = model:FindFirstChild("TreeClass")
                if TreeClass.Value == "GoldSwampy" then
                    Frost = Frost + 1
                DWB.test.GoldL.Text = "GoldSwampy: "..GoldSwampy.."/"..GoldSwampyFT
            end;
        end
        end
        end

for _, model in next, workspace.PlayerModels:GetChildren() do
    if string.find(model.Name, "Plank") then
    local owner = model:FindFirstChild("Owner")
    if owner and owner.Value == game.Players.LocalPlayer then
    local TreeClass = model:FindFirstChild("TreeClass")
            if TreeClass.Value == "SnowGlow" then
                SnowGlow = SnowGlow + 1
            DWB.test.SnowGlowL.Text = "SnowGlow: "..SnowGlow.."/"..SnowGlowFT
        end;
    end
    end
    end

for _, model in next, workspace.PlayerModels:GetChildren() do
        if string.find(model.Name, "Plank") then
        local owner = model:FindFirstChild("Owner")
        if owner and owner.Value == game.Players.LocalPlayer then
        local TreeClass = model:FindFirstChild("TreeClass")
                if TreeClass.Value == "Frost" then
                    Frost = Frost + 1
                DWB.test.FrostL.Text = "Frost: "..Frost.."/"..FrostFT
            end;
        end
        end
    end

for _, model in next, workspace.PlayerModels:GetChildren() do
            if string.find(model.Name, "Plank") then
            local owner = model:FindFirstChild("Owner")
            if owner and owner.Value == game.Players.LocalPlayer then
            local TreeClass = model:FindFirstChild("TreeClass")
                    if TreeClass.Value == "CaveCrawler" then
                        CaveCrawler = CaveCrawler + 1
                    DWB.test.CaveL.Text = "CaveCrawler: "..CaveCrawler.."/"..CaveCrawlerFT
                end;
            end
            end
            end
        
for _, model in next, workspace.PlayerModels:GetChildren() do
                if string.find(model.Name, "Plank") then
                local owner = model:FindFirstChild("Owner")
                if owner and owner.Value == game.Players.LocalPlayer then
                local TreeClass = model:FindFirstChild("TreeClass")
                        if TreeClass.Value == "LoneCave" then
                            LoneCave = LoneCave + 1
                        DWB.test.EndL.Text = "LoneCave: "..LoneCave.."/"..LoneCaveFT
                    end;
                end
                end
                end
        
for _, model in next, workspace.PlayerModels:GetChildren() do
            if string.find(model.Name, "Plank") then
            local owner = model:FindFirstChild("Owner")
            if owner and owner.Value == game.Players.LocalPlayer then
            local TreeClass = model:FindFirstChild("TreeClass")
                    if TreeClass.Value == "Spooky" then
                        Spooky = Spooky + 1
                    DWB.test.SpookyL.Text = "Spooky: "..Spooky.."/"..SpookyFT
                end;
            end
            end
            end
        
for _, model in next, workspace.PlayerModels:GetChildren() do
                if string.find(model.Name, "Plank") then
                local owner = model:FindFirstChild("Owner")
                if owner and owner.Value == game.Players.LocalPlayer then
                local TreeClass = model:FindFirstChild("TreeClass")
                        if TreeClass.Value == "SpookyNeon" then
                            SpookyNeon = SpookyNeon + 1
                        DWB.test.SpookyNeonL.Text = "SpookyNeon: "..SpookyNeon.."/"..SpookyNeonFT
                    end;
                end
                end
                end
        
        
        
        
        
